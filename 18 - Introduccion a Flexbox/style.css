* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.container {
    width: 400px;
    max-width: 600px;
    height: 600px;
    outline: 2px solid #000;
    margin: 30px auto;

    display: flex;

    /*display: inline-flex;*/ /* inline-flex -> permite que sea un elemento en linea */

    /*align-items: stretch;*/ /* stretch (deefecto) -> estira los items */
    /*align-items: flex-start;*/ /* flex-start -> Tamaño de los item es el minimo de su contenido */

    /*flex-direction: row;*/ /* row (defecto) */

    /*flex-wrap: nowrap;*/ /* nowrap (defecto) -> si los elementos sobrepasan el tamaño del flex container, se encojen */

    /*flex-wrap: wrap;*/ /* wrap -> crea una nueva linea si los items sobrepasan el tamaño del flex container */

    /*flex-wrap: wrap-reverse;*/ /* wrap-reverse -> igual a wrap pero manda al final del cross-axis */

    /*flex-flow: <flex-direction> <flex-wrap>;*/
    /*flex-flow: row wrap;*/

    /* justify-content -> permite alinear elementos en el main axis */

    /*justify-content: space-between;*/ /* space-between -> alina los elementos, el primero al inicio del flex container y el ultimo, al final del flex container */

    /*justify-content: space-around;*/ /* space-around -> destribuye a los item de igual manera pero no los pega a los lados, pero sumando los espacios de cada elemento */

    /*justify-content: space-evenly;*/ /* space-evenly -> distribuye a los elementos con el mismo espacio de separación sin tocar los border del flex container */

    /*justify-content: center;*/ /* center -> centra a todos los elementos */

    /* las propiedaes de alienamiento solo destribuyen a los item si hay espacio disponible en el flex container */

    /* align-items -> alinea elementos en el cross axis */

    /*align-items: stretch;*/ /* stretch (defecto) -> se estira por el cross axis */

    /*align-items: center;*/ /* center -> centra los elementos en el cross axis */

    /*align-items: flex-start;*/ /* flex-start -> los elementos se alinearan al inicio del cross axis */

    /*align-items: flex-end;*/ /* flex-end -> los elementos se alinearan al final del cross axis */

    /*align-items: baseline;*/ /* baseline -> se alinean en base asu base del contenido del elemento */

    /*flex-wrap: wrap;*/

   /* align-content: center;*/ /* solo serviría si tiene elementos que se desbordan - similar a justify-contect */

   /* justify-content: space-between;*/
}


.item { /* si no espesificamos un width o un height, se estira, es su comportamiento de por defecto */
    --height: 80px;
    background: tomato;
    width: 80px;
    height: var(--height);
    line-height: var(--height);
    color: #fff;
    text-align: center;
    font-weight: bold;
    font-size: 1.5rem;
    font-family: sans-serif;

    order: 0; /* 0 (defecto) -> order de 0  - se ordena de menor a mayor*/
}

.item1 {
    /*order: 1;*/ /* 1 -> order de 1 */
}

.item2 {
    background: darkslateblue;
}

.item3 {
    background: crimson;
   /* order: -1;*/ /* -1 -> order de -1 */
}

.item4 {
    background: steelblue;
}
/*
@media  screen and (min-width: 600px) {
    .container {
        flex-direction: column;
    }

    .item4 {
        order: -1;
    }
}
*/
