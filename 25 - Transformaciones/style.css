* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    min-height: 400vh;
}

.container {
    outline: 2px solid crimson;
    height: 500px;
    width: 90%;
    margin: 60px auto;
}

.element {
    background: steelblue;
    width: 150px;
    height: 150px;
    color: #fff;
    font-family: sans-serif;
    padding: 10px;

    /*transform: none;*/ /* none (defecto) */

    /*transform: translateX(100px);*/ /* se traslada 100px desde su posición original hacia la derecha */

    /*transform: translateX(-100px);*/ /* se traslada 100px desde su posición original hacia la izquierda */

    /*transform: translateY(100px);*/ /* se traslada 100px desde su posición original hacia abajo */

    /*transform: translateY(100%);*/ /* en transform el 100% se refiere al ancho o al alto del elemento, en este caso al alto */

    /* shorthand */
    /*transform: translate(X, Y);*/
    /*transform: translate(100px, 50px);*/

    /*transform: translate(100%);*/ /* solo se aplica para el eje de las X */

    /* ------------------------------------------------------------ */
    /* rotate -> espesifica la cantidad de grados que un elemento girará en dirección a las manecillas del reloj */

    /*
        grados: 0-360 (deg)
        radianes: 0-6.28319 (rad)
        gradians: 0-400 (grad)
        turn: 0-1 (turn)
    */

    /*transform: rotate(20deg);*/ /* gira 20 grados hacia la derecha (como un reloj) */

    /*transform: rotate(.5turn);*/ /* gira .5 turn hacia la derecha (como un reloj), media vuelta */

    /* ------------------------------------------------------------ */
    /* scale -> permite escalar un elemento */
    /*transform: scaleX(1);*/ /* 1 (defecto) */
    /*transform: scaleX(2);*/ /* escala en 2 en la eje X */

    /*transform: translate(100%) scaleX(-1);*/ /* -1 -> invierte el elemento en el eje X */

    /*transform: scale(2);*/ /* escala en 2 en el eje X y Y */


    /* ------------------------------------------------------------ */
    /* skew -> cortar o partir un elemento, igualmente que rotate solamente se usa valores angulares */
    /*transform: skew(80deg);*/
    /*transition: all .3s;*/


    /* ------------------------------------------------------------ */
    /*transform: scale(1.3) rotate(10deg) translate(50%) skew(10deg);*/

    /*transform: rotate(180deg) translate(100%);*/ /* primero rota 180 grados, entonces se X positivo va la izquierda, y Y positivo ahora va arriva */


    /*

        AL ROTAR 180 GRADOS CAMBIAMOS EL SISTEMA DE CORDENADAS

    */

    /* ------------------------------------------------------------ */
    /*

        TODO ELEMENTO QUE TENGO UN TRANSFORM DIFERENTE A NODE Y TENGA UN ELEMENTO HIJO CON POSITION: FIXED, HARÁ QUE EL ELEMENTO FIXED SE POSICIONE EN EL

     */

    transform: scale(1);
}

.container:hover .element {
    /* shorthand (X, Y) */
    /*transform: skew(10deg, 10deg);*/

    /*
      skewX, skewY -> es buena practica usar por separado
    */
}


.fixed {
    position: fixed;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.794);
    top: 0;
    left: 0;

    display: flex; /* se posiciona en base al navegador y siempre se queda ahí */
    align-items: center;
    justify-content: center;
    font-size: 2rem;
}

